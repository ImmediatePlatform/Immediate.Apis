using System.Threading;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Routing;

#pragma warning disable CS1591

namespace Microsoft.AspNetCore.Builder
{
	public static partial class {{ assembly }}RoutesBuilder
	{
		private static void Map{{ method.class_as_method_name }}Endpoint(IEndpointRouteBuilder app)
		{
			var endpoint = app
				.{{ method.map_method }}(
					"{{ method.route }}",
					{{~ if !string.empty method.http_method ~}}
					["{{ method.http_method }}"],
					{{~ end ~}} 
					async (
						[{{ method.parameter_attribute }}] {{ method.parameter_type }} parameters,
						[FromServices] {{ method.class_full_name }}.Handler handler,
						CancellationToken token
					) =>
					{
						var ret = await handler.HandleAsync(parameters, token);
						{{~ if method.use_transform_method ~}}
						return {{ method.class_full_name }}.TransformResult(ret);
						{{~ else ~}}
						return ret;
						{{~ end ~}}
					}
				);
			{{~ if method.allow_anonymous ~}}

			_ = endpoint.AllowAnonymous();
			{{~ else if method.authorize ~}}

			_ = endpoint.RequireAuthorization({{ if !string.empty method.authorize_policy }}"{{ method.authorize_policy }}"{{ end }});
			{{~ end ~}}
			{{~ if method.use_customization ~}}

			{{ method.class_full_name }}.CustomizeEndpoint(endpoint);
			{{~ end ~}}
		}
	}
}

{{ if method.namespace -}}
namespace {{ method.namespace }}
{
{{ end }}
	/// <remarks><see cref="{{ method.parameter_type }}" /> registered using <c>[{{ method.parameter_attribute }}]</c></remarks>
	partial {{ method.class.type }} {{ method.class.name }};
{{ if method.namespace -}}
}
{{ end -}}
